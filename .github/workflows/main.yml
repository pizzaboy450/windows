name: Windows RDP Clean (Auto-Restart)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"   # every 6 hours

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 355

    steps:
      - name: Enable RDP + firewall
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389

      - name: Create RDP user
        run: |
          $chars = ([char[]](33..126))
          $password = -join ((1..16) | ForEach-Object { Get-Random -InputObject $chars })
          $secure = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $secure -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Install & connect Tailscale
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          $msi = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi" -OutFile $msi
          Start-Process msiexec.exe -ArgumentList "/i", "`"$msi`"", "/quiet", "/norestart" -Wait
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$env:TAILSCALE_AUTH_KEY --hostname=gh-clean-win

          $ip = $null
          for ($i = 0; $i -lt 15 -and -not $ip; $i++) {
            $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            Start-Sleep -Seconds 5
          }
          if (-not $ip) { Write-Error "No Tailscale IP found" -ErrorAction Stop }
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV

      - name: Show connection info and keep alive
        run: |
          Write-Host "`n===== WINDOWS RDP CLEAN ====="
          Write-Host "Tailscale IP : $env:TAILSCALE_IP"
          Write-Host "Username     : RDP"
          Write-Host "Password     : $env:RDP_PASSWORD"
          Write-Host "================================"
          while ($true) {
            Write-Host "[$(Get-Date)] Running..."
            Start-Sleep -Seconds 300
          }
