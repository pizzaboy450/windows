name: Windows RDP Semi-Persistent

on:
  workflow_dispatch:        # Manual trigger
  schedule:
    - cron: "0 */6 * * *"  # Auto-run every 6 hours (optional)

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 60      # Max for GitHub runner

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Restore previous session
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: windows-vm-data
        path: C:\data

    - name: Enable RDP + Firewall
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
        netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
        Restart-Service -Name TermService -Force

    - name: Create RDP user
      run: |
        Add-Type -AssemblyName System.Security
        $chars = ([char[]](33..126))
        $password = -join ((1..16) | ForEach-Object { Get-Random -InputObject $chars })
        $securePass = ConvertTo-SecureString $password -AsPlainText -Force
        New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
        Add-LocalGroupMember -Group "Administrators" -Member "RDP"
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
        echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

    - name: Install and connect Tailscale
      run: |
        $url = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
        $path = "$env:TEMP\tailscale.msi"
        Invoke-WebRequest -Uri $url -OutFile $path
        Start-Process msiexec.exe -ArgumentList "/i", "`"$path`"", "/quiet", "/norestart" -Wait
        & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-rdp-vm

        # Wait for Tailscale IP
        $ip = $null
        for ($i=0; $i -lt 12 -and -not $ip; $i++) {
          $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          Start-Sleep -Seconds 5
        }
        if (-not $ip) { Write-Error "No Tailscale IP found" -ErrorAction Stop }
        echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV

    - name: Show connection info
      run: |
        Write-Host "`n=== Windows RDP ==="
        Write-Host "Tailscale IP : $env:TAILSCALE_IP"
        Write-Host "Username     : RDP"
        Write-Host "Password     : $env:RDP_PASSWORD"
        Write-Host "======================="
        Write-Host "Connect from any device on Tailscale."
        while ($true) {
          Write-Host "[$(Get-Date)] VM running..."
          Start-Sleep -Seconds 60
        }

    - name: Save session files
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: windows-vm-data
        path: C:\data
