name: Android VM Browser (Persistent)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # Optional auto-restart every 6 hours

jobs:
  android-browser:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Restore VM data
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: vm-data
        path: C:\data

    - name: Enable RDP & Firewall
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
        Restart-Service -Name TermService -Force

    - name: Create RDP User
      run: |
        Add-Type -AssemblyName System.Security
        $chars = ([char[]](33..126))
        $password = -join ((1..16) | ForEach-Object { Get-Random -InputObject $chars })
        $securePass = ConvertTo-SecureString $password -AsPlainText -Force
        New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
        Add-LocalGroupMember -Group "Administrators" -Member "RDP"
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
        echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

    - name: Install Tailscale
      run: |
        $url = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
        $path = "$env:TEMP\tailscale.msi"
        Invoke-WebRequest -Uri $url -OutFile $path
        Start-Process msiexec.exe -ArgumentList "/i", "`"$path`"", "/quiet", "/norestart" -Wait

    - name: Connect Tailscale
      run: |
        & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=android-vm
        $ip = $null
        for ($i=0; $i -lt 12 -and -not $ip; $i++) {
          $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          Start-Sleep -Seconds 5
        }
        if (-not $ip) { Write-Error "No Tailscale IP assigned" }
        echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV

    - name: Install BlueStacks
      run: |
        $url = "https://www.bluestacks.com/?utm_source=cdn3&utm_medium=waf."
        $path = "$env:TEMP\BluestacksInstaller.exe"
        Invoke-WebRequest -Uri $url -OutFile $path
        Start-Process -FilePath $path -ArgumentList "/silent" -Wait

    - name: Start BlueStacks
      run: |
        Start-Process -FilePath "C:\Program Files\BlueStacks_nxt\HD-RunApp.exe" `
          -ArgumentList "--package=com.android.settings" -WindowStyle Hidden
        Write-Host "BlueStacks started"

    - name: Install scrcpy (optional for browser streaming)
      run: |
        choco install scrcpy -y
        Write-Host "scrcpy installed for Android screen streaming"

    - name: Launch Android Stream to Browser
      run: |
        Start-Process -FilePath "scrcpy.exe" -ArgumentList "--tcpip=0.0.0.0:8080" -WindowStyle Hidden

    - name: Show access info
      run: |
        Write-Host "`n=== Android VM ==="
        Write-Host "Tailscale IP: $env:TAILSCALE_IP"
        Write-Host "RDP Username: RDP"
        Write-Host "RDP Password: $env:RDP_PASSWORD"
        Write-Host "Access scrcpy via browser at http://$env:TAILSCALE_IP:8080"

    - name: Keep VM running
      run: |
        while ($true) {
          Write-Host "[$(Get-Date)] VM running..."
          Start-Sleep -Seconds 300
        }

    - name: Save VM Data
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: vm-data
        path: C:\data
